apiVersion: v1
kind: Service
metadata:
  name: mssql
  namespace: demo
spec:
  # type: LoadBalancer
  selector:
    app: mssql
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
      name: tcpsql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mssql
  namespace: demo
spec:
  serviceName: "mssql"
  replicas: 2
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: mssql
  template:
    metadata:
      labels:
        app: mssql
    spec:
      securityContext:
        fsGroup: 10001
      containers:
        - name: mssql
          # image: mcr.microsoft.com/mssql/server:2022-latest
          image: neajmorshad/sql22:tools-0.1
          ports:
            - containerPort: 1433
              name: tcpsql
          env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: MSSQL_ENABLE_HADR
              value: "1"
            - name: MSSQL_AGENT_ENABLED
              value: "1"
            - name: MSSQL_SA_PASSWORD
              value: "Pa55w0rd!"
              # valueFrom:
              #   secretKeyRef:
              #     name: mssql
              #     key: MSSQL_SA_PASSWORD
          volumeMounts:
            - name: mssql
              mountPath: "/var/opt/mssql"
            - name: security-ca-certificates
              mountPath: /var/opt/mssql/security/ca-certificates
      volumes:
        - name: security-ca-certificates
          projected:
            sources:
            - secret:
                items:
                - key: tls.crt
                  path: tls.crt
                name: mssqlserver-ca
  volumeClaimTemplates:
    - metadata:
        name: mssql
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi

# Connect with Database; /opt/mssql-tools18/bin/sqlcmd -S mssql.demo.svc -U sa -P 'Pa55w0rd!' -d master -C

